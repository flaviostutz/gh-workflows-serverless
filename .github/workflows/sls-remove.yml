on:
  workflow_call:
    inputs:
      workdir:
        description: 'base dir used during builds. If using monorepo, specify the relative path of the service folder. ex.: ./services/example1'
        required: true
        type: string
      stage:
        description: '"stage" used on sls operations as parameter --stage'
        required: true
        type: string
      environment: 
        description: 'Github environment to attach this job to'
        required: false
        type: string
      AWS_DEFAULT_REGION:
        description: 'The AWS region to deploy resources to'
        default: ''
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: false
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: false

jobs:
  package-remove:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.workdir }}

    environment: ${{ inputs.environment }}

    steps:

    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: '14'
        cache: 'npm'
        cache-dependency-path: ${{ inputs.workdir }}/package-lock.json

    - name: 'Validate workflow input and secrets'
      run: |      
        if [ "${{ inputs.AWS_DEFAULT_REGION }}" == "" ]; then
          echo "'AWS_DEFAULT_REGION' workflow input is required when deploy=true"
          exit 1
        fi

        if [ "${{ secrets.AWS_ACCESS_KEY_ID }}" == "" ]; then
          echo "'AWS_ACCESS_KEY_ID' workflow secret is required when deploy=true"
          exit 1
        fi

        if [ "${{ secrets.AWS_SECRET_ACCESS_KEY }}" == "" ]; then
          echo "'AWS_SECRET_ACCESS_KEY' workflow secret is required when deploy=true"
          exit 1
        fi
        echo $AWS_SECRET_ACCESS_KEY

        if [ "$(npm run | grep remove)" == "" ]; then
          echo "Your package.json file must have a script named 'remove'. eg: 'sls remove'"
          exit 1
        fi

    - name: Run npm install (${{ inputs.workdir }})
      run: npm ci

    - name: Run serverless remove with stage "${{ inputs.stage }}"
      run: AWS_DEFAULT_REGION=${{ inputs.AWS_DEFAULT_REGION }} AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} npm run remove -- --stage ${{ inputs.stage }}



